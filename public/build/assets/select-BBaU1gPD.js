import{$ as L,a as H,w as I}from"./use-active-press-ClxGgw1g.js";import{r}from"./app-8FRsrqvT.js";import{a as y}from"./disabled-DGbATtm_.js";import{K as E,y as M,n as S,a as w,L as F,_ as j}from"./use-sync-refs-DxRufJr0.js";import{U as B}from"./description-Bfosvy6f.js";let U=r.createContext(void 0);function P(){return r.useContext(U)}let x=r.createContext(null);x.displayName="LabelContext";function T(){let l=r.useContext(x);if(l===null){let o=new Error("You used a <Label /> component, but it is not inside a relevant parent.");throw Error.captureStackTrace&&Error.captureStackTrace(o,T),o}return l}function A(l){var o,i,u;let e=(i=(o=r.useContext(x))==null?void 0:o.value)!=null?i:void 0;return((u=void 0)!=null?u:0)>0?[e,...l].filter(Boolean).join(" "):e}let D="label";function N(l,o){var i;let u=r.useId(),e=T(),b=P(),a=y(),{id:s=`headlessui-label-${u}`,htmlFor:n=b??((i=e.props)==null?void 0:i.htmlFor),passive:$=!1,...p}=l,k=M(o);S(()=>e.register(s),[s,e.register]);let m=w(c=>{let f=c.currentTarget;if(f instanceof HTMLLabelElement&&c.preventDefault(),e.props&&"onClick"in e.props&&typeof e.props.onClick=="function"&&e.props.onClick(c),f instanceof HTMLLabelElement){let t=document.getElementById(f.htmlFor);if(t){let C=t.getAttribute("disabled");if(C==="true"||C==="")return;let g=t.getAttribute("aria-disabled");if(g==="true"||g==="")return;(t instanceof HTMLInputElement&&(t.type==="radio"||t.type==="checkbox")||t.role==="radio"||t.role==="checkbox"||t.role==="switch")&&t.click(),t.focus({preventScroll:!0})}}}),v=a||!1,h=r.useMemo(()=>({...e.slot,disabled:v}),[e.slot,v]),d={ref:k,...e.props,id:s,htmlFor:n,onClick:m};return $&&("onClick"in d&&(delete d.htmlFor,delete d.onClick),"onClick"in p&&delete p.onClick),F()({ourProps:d,theirProps:p,slot:h,defaultTag:n?D:"div",name:e.name||"Label"})}let G=E(N);Object.assign(G,{});let K="select";function O(l,o){let i=r.useId(),u=P(),e=y(),{id:b=u||`headlessui-select-${i}`,disabled:a=e||!1,invalid:s=!1,autoFocus:n=!1,...$}=l,p=A(),k=B(),{isFocusVisible:m,focusProps:v}=L({autoFocus:n}),{isHovered:h,hoverProps:d}=H({isDisabled:a}),{pressed:c,pressProps:f}=I({disabled:a}),t=j({ref:o,id:b,"aria-labelledby":p,"aria-describedby":k,"aria-invalid":s?"true":void 0,disabled:a||void 0,autoFocus:n},v,d,f),C=r.useMemo(()=>({disabled:a,invalid:s,hover:h,focus:m,active:c,autofocus:n}),[a,s,h,m,c,n]);return F()({ourProps:t,theirProps:$,slot:C,defaultTag:K,name:"Select"})}let J=E(O);export{J as j};
